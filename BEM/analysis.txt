Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 71.81    234.60   234.60    12923     0.02     0.02  Eigen::internal::inplace_transpose_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1>, false, false>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1>&)
 17.99    293.38    58.78                             DipoleXhYh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
  9.31    323.81    30.43                             WeaklySingularXh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
  0.62    325.83     2.02 272433164     0.00     0.00  kerSL(double)
  0.15    326.31     0.48 270598144     0.00     0.00  kerDL(double)
  0.04    326.43     0.12    32768     0.00     0.00  v2(double, double)
  0.02    326.50     0.07     2294     0.00     0.00  Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*)
  0.01    326.54     0.04    11402     0.00     0.00  preparedQuads::~preparedQuads()
  0.01    326.57     0.03      265     0.00     0.00  Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*)
  0.01    326.60     0.03       21     0.00     0.00  void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&, Eigen::internal::assign_op<double, double> const&)
  0.01    326.63     0.03        1     0.03     0.03  massMatrixYhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
  0.01    326.65     0.02      431     0.00     0.47  Eigen::internal::triangular_solve_matrix<double, long, 1, 5, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&)
  0.00    326.66     0.01    13829     0.00     0.00  kron(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
  0.00    326.67     0.01      388     0.00     0.00  Eigen::internal::partial_lu_impl<double, 0, int>::unblocked_lu(Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>&, int*, int&)
  0.00    326.68     0.01        8     0.00    27.47  Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::compute()
  0.00    326.69     0.01                             testPotentialYh(geometry const&, double (*)(double), Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
  0.00    326.70     0.01                             differentiationMatrix(geometry const&, int)
  0.00    326.70     0.00    32768     0.00     0.00  u(double, double)
  0.00    326.70     0.00    32768     0.00     0.00  v1(double, double)
  0.00    326.70     0.00    32768     0.00     0.00  fone(double, double)
  0.00    326.70     0.00     7560     0.00     0.00  Eigen::internal::gemm_pack_rhs<double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 4, 0, false, true>::operator()(double*, Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, long, long, long, long)
  0.00    326.70     0.00      531     0.00     0.00  void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long)
  0.00    326.70     0.00      438     0.00     0.00  void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 4, long>(long&, long&, long&, long)
  0.00    326.70     0.00      380     0.00     0.05  void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool)
  0.00    326.70     0.00      254     0.00     0.07  std::ctype<char>::do_widen(char) const
  0.00    326.70     0.00      126     0.00     0.00  Eigen::internal::general_matrix_vector_product<long, double, Eigen::internal::const_blas_data_mapper<double, long, 0>, 0, false, double, Eigen::internal::const_blas_data_mapper<double, long, 0>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, double*, long, double)
  0.00    326.70     0.00       26     0.00     0.00  legendrebasis(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1>&)
  0.00    326.70     0.00       21     0.00     0.00  massMatrixXhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
  0.00    326.70     0.00       20     0.00     0.00  void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool)
  0.00    326.70     0.00       18     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > > const&)
  0.00    326.70     0.00       11     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::resize(long, long)
  0.00    326.70     0.00        8     0.00    27.49  Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >(Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&)
  0.00    326.70     0.00        8     0.00    27.47  Eigen::internal::partial_lu_impl<double, 0, int>::blocked_lu(long, long, double*, long, int*, int&, long)
  0.00    326.70     0.00        8     0.00     0.00  geometry::enhance()
  0.00    326.70     0.00        7     0.00     1.64  Eigen::internal::triangular_solve_matrix<double, long, 1, 2, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&)
  0.00    326.70     0.00        4     0.00     0.00  Eigen::internal::gebp_kernel<double, double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, double const*, double const*, long, long, long, double, long, long, long, long)
  0.00    326.70     0.00        4     0.00     0.00  Eigen::internal::aligned_malloc(unsigned long)
  0.00    326.70     0.00        3     0.00     0.00  meshgrid(Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&)
  0.00    326.70     0.00        3     0.00     0.00  tensorize(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
  0.00    326.70     0.00        3     0.00     0.00  void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool)
  0.00    326.70     0.00        2     0.00     0.00  prepareQuad(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
  0.00    326.70     0.00        2     0.00   103.61  solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
  0.00    326.70     0.00        2     0.00     0.03  testXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
  0.00    326.70     0.00        2     0.00    13.76  projectYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
  0.00    326.70     0.00        2     0.00     0.00  void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::assign_op<double, double> >(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::internal::assign_op<double, double> const&)
  0.00    326.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z13legendrebasisiRN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEEiRNS0_IdLin1ELin1ELi0ELin1ELin1EEE
  0.00    326.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z14massMatrixXhXhRK8geometryiRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEE
  0.00    326.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z15testPotentialXhRK8geometryPFddERKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEEiS8_
  0.00    326.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z16WeaklySingularXhRK8geometryPFddEiRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEES8_S8_
  0.00    326.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z4kronRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_
  0.00    326.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z6testXhRK8geometryPFdddEiRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEE
  0.00    326.70     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z9tensorizeRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_
  0.00    326.70     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00    326.70     0.00        1     0.00     0.00  tableGauss(int)
  0.00    326.70     0.00        1     0.00     0.00  get_wall_time()
  0.00    326.70     0.00        1     0.00     0.00  tableLogGauss(int)
  0.00    326.70     0.00        1     0.00    27.49  solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&)
  0.00    326.70     0.00        1     0.00     0.00  testYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
  0.00    326.70     0.00        1     0.00     0.00  Eigen::internal::queryCacheSizes(int&, int&, int&)
  0.00    326.70     0.00        1     0.00     0.00  Eigen::internal::triangular_solve_vector<double, double, long, 1, 2, false, 0>::run(long, double const*, long, double*)
  0.00    326.70     0.00        1     0.00     0.00  Eigen::internal::triangular_solve_vector<double, double, long, 1, 5, false, 0>::run(long, double const*, long, double*)
  0.00    326.70     0.00        1     0.00     0.00  Eigen::internal::triangular_solver_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1, 2, 0, 1>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&)
  0.00    326.70     0.00        1     0.00     0.00  Eigen::internal::triangular_solver_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1, 5, 0, 1>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.00% of 326.70 seconds

index % time    self  children    called     name
                0.02    0.00       1/12923       testPotentialYh(geometry const&, double (*)(double), Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [14]
               11.51    0.00     634/12923       Eigen::internal::triangular_solve_matrix<double, long, 1, 2, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&) [16]
               18.92    0.00    1042/12923       std::ctype<char>::do_widen(char) const [13]
              204.15    0.00   11246/12923       Eigen::internal::triangular_solve_matrix<double, long, 1, 5, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&) [7]
[1]     71.8  234.60    0.00   12923         Eigen::internal::inplace_transpose_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1>, false, false>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [1]
-----------------------------------------------
                0.00   27.49       1/8           solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) [11]
                0.00  192.40       7/8           solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [6]
[2]     67.3    0.00  219.88       8         Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >(Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&) [2]
                0.01  219.78       8/8           Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::compute() [3]
                0.03    0.06     265/265         Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*) [20]
-----------------------------------------------
                0.01  219.78       8/8           Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >(Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&) [2]
[3]     67.3    0.01  219.78       8         Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::compute() [3]
                0.00  219.78       8/8           Eigen::internal::partial_lu_impl<double, 0, int>::blocked_lu(long, long, double*, long, int*, int&, long) [4]
-----------------------------------------------
                                 434             Eigen::internal::partial_lu_impl<double, 0, int>::blocked_lu(long, long, double*, long, int*, int&, long) [4]
                0.00  219.78       8/8           Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::compute() [3]
[4]     67.3    0.00  219.78       8+434     Eigen::internal::partial_lu_impl<double, 0, int>::blocked_lu(long, long, double*, long, int*, int&, long) [4]
                0.02  200.84     424/431         Eigen::internal::triangular_solve_matrix<double, long, 1, 5, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&) [7]
                0.00   18.92     380/380         void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) [12]
                0.01    0.00     388/388         Eigen::internal::partial_lu_impl<double, 0, int>::unblocked_lu(Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>&, int*, int&) [31]
                0.00    0.00     424/438         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 4, long>(long&, long&, long&, long) [52]
                0.00    0.00     380/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
                                 434             Eigen::internal::partial_lu_impl<double, 0, int>::blocked_lu(long, long, double*, long, int*, int&, long) [4]
-----------------------------------------------
                                                 <spontaneous>
[5]     63.4    0.00  207.29                 projectXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [5]
                0.00  207.22       2/2           solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [6]
                0.00    0.06       2/2           testXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [22]
                0.00    0.00       2/19          void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
                0.00    0.00       2/26          legendrebasis(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [54]
                0.00    0.00       2/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
-----------------------------------------------
                0.00  207.22       2/2           projectXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [5]
[6]     63.4    0.00  207.22       2         solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [6]
                0.00  192.40       7/8           Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >(Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&) [2]
                0.00   11.51       7/7           Eigen::internal::triangular_solve_matrix<double, long, 1, 2, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&) [16]
                0.00    3.32       7/431         Eigen::internal::triangular_solve_matrix<double, long, 1, 5, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&) [7]
                0.00    0.00      14/438         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 4, long>(long&, long&, long&, long) [52]
-----------------------------------------------
                0.00    3.32       7/431         solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [6]
                0.02  200.84     424/431         Eigen::internal::partial_lu_impl<double, 0, int>::blocked_lu(long, long, double*, long, int*, int&, long) [4]
[7]     62.5    0.02  204.15     431         Eigen::internal::triangular_solve_matrix<double, long, 1, 5, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&) [7]
              204.15    0.00   11246/12923       Eigen::internal::inplace_transpose_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1>, false, false>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [1]
                0.00    0.00    7236/7560        Eigen::internal::gemm_pack_rhs<double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 4, 0, false, true>::operator()(double*, Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, long, long, long, long) [50]
-----------------------------------------------
                                                 <spontaneous>
[8]     18.2   58.78    0.51                 DipoleXhYh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [8]
                0.48    0.00 270532608/270598144     kerDL(double) [18]
                0.02    0.00    5120/11402       preparedQuads::~preparedQuads() [24]
                0.01    0.00       9/21          void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&, Eigen::internal::assign_op<double, double> const&) [26]
                0.00    0.00    5120/13829       kron(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [30]
                0.00    0.00      10/18          Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > > const&) [56]
                0.00    0.00       6/26          legendrebasis(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [54]
                0.00    0.00       1/11          Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::resize(long, long) [57]
-----------------------------------------------
                                                 <spontaneous>
[9]      9.9   30.43    2.06                 WeaklySingularXh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [9]
                2.02    0.00 272367616/272433164     kerSL(double) [17]
                0.02    0.00    6144/11402       preparedQuads::~preparedQuads() [24]
                0.02    0.00      12/21          void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&, Eigen::internal::assign_op<double, double> const&) [26]
                0.01    0.00    8704/13829       kron(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [30]
                0.00    0.00      10/11          Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::resize(long, long) [57]
                0.00    0.00       8/18          Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > > const&) [56]
                0.00    0.00       6/26          legendrebasis(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [54]
-----------------------------------------------
                0.00   13.76       1/2           testPotentialYh(geometry const&, double (*)(double), Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [14]
                0.00   13.76       1/2           testPotentialXh(geometry const&, double (*)(double), Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [15]
[10]     8.4    0.00   27.52       2         projectYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [10]
                0.00   27.49       1/1           solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) [11]
                0.03    0.00       1/1           massMatrixYhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [25]
                0.00    0.00       2/19          void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
                0.00    0.00       1/1           testYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [34]
                0.00    0.00       2/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
-----------------------------------------------
                0.00   27.49       1/1           projectYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [10]
[11]     8.4    0.00   27.49       1         solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) [11]
                0.00   27.49       1/8           Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >(Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&) [2]
                0.00    0.00       1/1           Eigen::internal::triangular_solver_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1, 5, 0, 1>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) [78]
                0.00    0.00       1/1           Eigen::internal::triangular_solver_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1, 2, 0, 1>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) [77]
-----------------------------------------------
                0.00   18.92     380/380         Eigen::internal::partial_lu_impl<double, 0, int>::blocked_lu(long, long, double*, long, int*, int&, long) [4]
[12]     5.8    0.00   18.92     380         void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) [12]
                0.00   18.92     254/254         std::ctype<char>::do_widen(char) const [13]
                0.00    0.00     126/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
-----------------------------------------------
                0.00   18.92     254/254         void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) [12]
[13]     5.8    0.00   18.92     254         std::ctype<char>::do_widen(char) const [13]
               18.92    0.00    1042/12923       Eigen::internal::inplace_transpose_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1>, false, false>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [1]
-----------------------------------------------
                                                 <spontaneous>
[14]     4.2    0.01   13.78                 testPotentialYh(geometry const&, double (*)(double), Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [14]
                0.00   13.76       1/2           projectYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [10]
                0.02    0.00       1/12923       Eigen::internal::inplace_transpose_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1>, false, false>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [1]
                0.00    0.00   65536/270598144     kerDL(double) [18]
                0.00    0.00       1/13829       kron(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [30]
                0.00    0.00       1/26          legendrebasis(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [54]
-----------------------------------------------
                                                 <spontaneous>
[15]     4.2    0.00   13.76                 testPotentialXh(geometry const&, double (*)(double), Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [15]
                0.00   13.76       1/2           projectYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [10]
                0.00    0.00   65536/272433164     kerSL(double) [17]
                0.00    0.00       1/13829       kron(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [30]
                0.00    0.00       1/26          legendrebasis(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [54]
-----------------------------------------------
                0.00   11.51       7/7           solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [6]
[16]     3.5    0.00   11.51       7         Eigen::internal::triangular_solve_matrix<double, long, 1, 2, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&) [16]
               11.51    0.00     634/12923       Eigen::internal::inplace_transpose_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1>, false, false>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [1]
                0.00    0.00     324/7560        Eigen::internal::gemm_pack_rhs<double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 4, 0, false, true>::operator()(double*, Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, long, long, long, long) [50]
-----------------------------------------------
                0.00    0.00       4/272433164     get_wall_time() [33]
                0.00    0.00       8/272433164     Eigen::internal::gebp_kernel<double, double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, double const*, double const*, long, long, long, double, long, long, long, long) [37]
                0.00    0.00   65536/272433164     testPotentialXh(geometry const&, double (*)(double), Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [15]
                2.02    0.00 272367616/272433164     WeaklySingularXh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [9]
[17]     0.6    2.02    0.00 272433164         kerSL(double) [17]
-----------------------------------------------
                0.00    0.00   65536/270598144     testPotentialYh(geometry const&, double (*)(double), Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [14]
                0.48    0.00 270532608/270598144     DipoleXhYh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [8]
[18]     0.1    0.48    0.00 270598144         kerDL(double) [18]
-----------------------------------------------
                0.06    0.00   16384/32768       testYh(geometry const&, double (*)(double, double), double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [23]
                0.06    0.00   16384/32768       testXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [22]
[19]     0.0    0.12    0.00   32768         v2(double, double) [19]
-----------------------------------------------
                                   2             Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*) [20]
                0.03    0.06     265/265         Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >(Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&) [2]
[20]     0.0    0.03    0.06     265+2       Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*) [20]
                0.06    0.00    1944/2294        Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*) [21]
                                   2             Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*) [20]
-----------------------------------------------
                0.00    0.00       3/2294        void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) [32]
                0.01    0.00     347/2294        massMatrixXhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) <cycle 1> [28]
                0.06    0.00    1944/2294        Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*) [20]
[21]     0.0    0.07    0.00    2294         Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*) [21]
                0.00    0.00     138/11402       preparedQuads::~preparedQuads() [24]
-----------------------------------------------
                0.00    0.06       2/2           projectXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [5]
[22]     0.0    0.00    0.06       2         testXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [22]
                0.06    0.00   16384/32768       v2(double, double) [19]
                0.00    0.00       4/19          void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
                0.00    0.00   16384/32768       v1(double, double) [48]
                0.00    0.00   16384/32768       fone(double, double) [49]
                0.00    0.00   16384/32768       u(double, double) [47]
                0.00    0.00       4/26          legendrebasis(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [54]
                0.00    0.00       4/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
-----------------------------------------------
                                                 <spontaneous>
[23]     0.0    0.00    0.06                 testYh(geometry const&, double (*)(double, double), double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [23]
                0.06    0.00   16384/32768       v2(double, double) [19]
                0.00    0.00       1/19          void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
                0.00    0.00   16384/32768       v1(double, double) [48]
                0.00    0.00       1/26          legendrebasis(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [54]
                0.00    0.00       1/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
-----------------------------------------------
                0.00    0.00     138/11402       Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*) [21]
                0.02    0.00    5120/11402       DipoleXhYh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [8]
                0.02    0.00    6144/11402       WeaklySingularXh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [9]
[24]     0.0    0.04    0.00   11402         preparedQuads::~preparedQuads() [24]
-----------------------------------------------
                0.03    0.00       1/1           projectYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [10]
[25]     0.0    0.03    0.00       1         massMatrixYhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [25]
                0.00    0.00       1/19          void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
                0.00    0.00       1/13829       kron(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [30]
                0.00    0.00       1/26          legendrebasis(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [54]
                0.00    0.00       1/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
-----------------------------------------------
                0.01    0.00       9/21          DipoleXhYh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [8]
                0.02    0.00      12/21          WeaklySingularXh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [9]
[26]     0.0    0.03    0.00      21         void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&, Eigen::internal::assign_op<double, double> const&) [26]
-----------------------------------------------
[27]     0.0    0.00    0.01      19+22      <cycle 1 as a whole> [27]
                0.00    0.01      21             massMatrixXhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) <cycle 1> [28]
                0.00    0.00      20             void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
-----------------------------------------------
                                  21             void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
[28]     0.0    0.00    0.01      21         massMatrixXhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) <cycle 1> [28]
                0.01    0.00     347/2294        Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*) [21]
                0.00    0.00       1/13829       kron(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [30]
                0.00    0.00       2/26          legendrebasis(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [54]
                0.00    0.00       2/4           Eigen::internal::aligned_malloc(unsigned long) [59]
                0.00    0.00       1/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
                                   1             void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
-----------------------------------------------
                                                 <spontaneous>
[29]     0.0    0.01    0.00                 differentiationMatrix(geometry const&, int) [29]
                0.00    0.00       1/13829       kron(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [30]
-----------------------------------------------
                0.00    0.00       1/13829       differentiationMatrix(geometry const&, int) [29]
                0.00    0.00       1/13829       massMatrixYhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [25]
                0.00    0.00       1/13829       massMatrixXhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) <cycle 1> [28]
                0.00    0.00       1/13829       testPotentialYh(geometry const&, double (*)(double), Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [14]
                0.00    0.00       1/13829       testPotentialXh(geometry const&, double (*)(double), Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [15]
                0.00    0.00    5120/13829       DipoleXhYh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [8]
                0.01    0.00    8704/13829       WeaklySingularXh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [9]
[30]     0.0    0.01    0.00   13829         kron(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [30]
-----------------------------------------------
                0.01    0.00     388/388         Eigen::internal::partial_lu_impl<double, 0, int>::blocked_lu(long, long, double*, long, int*, int&, long) [4]
[31]     0.0    0.01    0.00     388         Eigen::internal::partial_lu_impl<double, 0, int>::unblocked_lu(Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>&, int*, int&) [31]
-----------------------------------------------
                                                 <spontaneous>
[32]     0.0    0.00    0.00                 void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) [32]
                0.00    0.00       1/1           get_wall_time() [33]
                0.00    0.00       3/2294        Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*) [21]
-----------------------------------------------
                                   2             get_wall_time() [33]
                0.00    0.00       1/1           void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, -1, -1, false>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) [32]
[33]     0.0    0.00    0.00       1+2       get_wall_time() [33]
                0.00    0.00       4/19          void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
                0.00    0.00       4/272433164     kerSL(double) [17]
                0.00    0.00       2/4           Eigen::internal::gebp_kernel<double, double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, double const*, double const*, long, long, long, double, long, long, long, long) [37]
                0.00    0.00       4/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
                0.00    0.00       2/2           void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::assign_op<double, double> >(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::internal::assign_op<double, double> const&) [63]
                                   2             get_wall_time() [33]
-----------------------------------------------
                0.00    0.00       1/1           projectYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [10]
[34]     0.0    0.00    0.00       1         testYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [34]
                0.00    0.00       2/19          void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
                0.00    0.00   16384/32768       u(double, double) [47]
                0.00    0.00   16384/32768       fone(double, double) [49]
                0.00    0.00       2/26          legendrebasis(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [54]
                0.00    0.00       2/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
-----------------------------------------------
                                                 <spontaneous>
[35]     0.0    0.00    0.00                 Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> >(Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> const&) [35]
                0.00    0.00       2/19          void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
                0.00    0.00       2/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
-----------------------------------------------
                                                 <spontaneous>
[36]     0.0    0.00    0.00                 Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >(Eigen::DenseBase<Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> > const&) [36]
                0.00    0.00       1/19          void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
                0.00    0.00       1/3           void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) [38]
                0.00    0.00       2/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
-----------------------------------------------
                                   4             Eigen::internal::gebp_kernel<double, double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, double const*, double const*, long, long, long, double, long, long, long, long) [37]
                0.00    0.00       2/4           get_wall_time() [33]
                0.00    0.00       2/4           void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) [38]
[37]     0.0    0.00    0.00       4+4       Eigen::internal::gebp_kernel<double, double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, double const*, double const*, long, long, long, double, long, long, long, long) [37]
                0.00    0.00       8/272433164     kerSL(double) [17]
                0.00    0.00       2/4           Eigen::internal::aligned_malloc(unsigned long) [59]
                                   4             Eigen::internal::gebp_kernel<double, double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, double const*, double const*, long, long, long, double, long, long, long, long) [37]
-----------------------------------------------
                0.00    0.00       1/3           Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >(Eigen::DenseBase<Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> > const&) [36]
                0.00    0.00       2/3           Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> const, Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> >(Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> const, Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> > const&) [39]
[38]     0.0    0.00    0.00       3         void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) [38]
                0.00    0.00       2/4           Eigen::internal::gebp_kernel<double, double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, double const*, double const*, long, long, long, double, long, long, long, long) [37]
                0.00    0.00       1/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
-----------------------------------------------
                                                 <spontaneous>
[39]     0.0    0.00    0.00                 Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> const, Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> >(Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> const, Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> > const&) [39]
                0.00    0.00       2/3           void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) [38]
                0.00    0.00       2/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
-----------------------------------------------
                0.00    0.00   16384/32768       testXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [22]
                0.00    0.00   16384/32768       testYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [34]
[47]     0.0    0.00    0.00   32768         u(double, double) [47]
-----------------------------------------------
                0.00    0.00   16384/32768       testYh(geometry const&, double (*)(double, double), double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [23]
                0.00    0.00   16384/32768       testXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [22]
[48]     0.0    0.00    0.00   32768         v1(double, double) [48]
-----------------------------------------------
                0.00    0.00   16384/32768       testXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [22]
                0.00    0.00   16384/32768       testYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [34]
[49]     0.0    0.00    0.00   32768         fone(double, double) [49]
-----------------------------------------------
                0.00    0.00     324/7560        Eigen::internal::triangular_solve_matrix<double, long, 1, 2, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&) [16]
                0.00    0.00    7236/7560        Eigen::internal::triangular_solve_matrix<double, long, 1, 5, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&) [7]
[50]     0.0    0.00    0.00    7560         Eigen::internal::gemm_pack_rhs<double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 4, 0, false, true>::operator()(double*, Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, long, long, long, long) [50]
-----------------------------------------------
                0.00    0.00       1/531         massMatrixYhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [25]
                0.00    0.00       1/531         massMatrixXhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) <cycle 1> [28]
                0.00    0.00       1/531         void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
                0.00    0.00       1/531         testYh(geometry const&, double (*)(double, double), double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [23]
                0.00    0.00       1/531         void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) [38]
                0.00    0.00       2/531         projectXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [5]
                0.00    0.00       2/531         testYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [34]
                0.00    0.00       2/531         projectYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [10]
                0.00    0.00       2/531         Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> const, Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> >(Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> const, Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> > const&) [39]
                0.00    0.00       2/531         Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >(Eigen::DenseBase<Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> > const&) [36]
                0.00    0.00       2/531         Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> >(Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> const&) [35]
                0.00    0.00       4/531         testXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [22]
                0.00    0.00       4/531         get_wall_time() [33]
                0.00    0.00     126/531         void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) [12]
                0.00    0.00     380/531         Eigen::internal::partial_lu_impl<double, 0, int>::blocked_lu(long, long, double*, long, int*, int&, long) [4]
[51]     0.0    0.00    0.00     531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
                0.00    0.00       1/1           Eigen::internal::queryCacheSizes(int&, int&, int&) [74]
-----------------------------------------------
                0.00    0.00      14/438         solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [6]
                0.00    0.00     424/438         Eigen::internal::partial_lu_impl<double, 0, int>::blocked_lu(long, long, double*, long, int*, int&, long) [4]
[52]     0.0    0.00    0.00     438         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 4, long>(long&, long&, long&, long) [52]
-----------------------------------------------
                0.00    0.00      63/126         Eigen::internal::triangular_solve_vector<double, double, long, 1, 5, false, 0>::run(long, double const*, long, double*) [76]
                0.00    0.00      63/126         Eigen::internal::triangular_solve_vector<double, double, long, 1, 2, false, 0>::run(long, double const*, long, double*) [75]
[53]     0.0    0.00    0.00     126         Eigen::internal::general_matrix_vector_product<long, double, Eigen::internal::const_blas_data_mapper<double, long, 0>, 0, false, double, Eigen::internal::const_blas_data_mapper<double, long, 0>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, double*, long, double) [53]
-----------------------------------------------
                0.00    0.00       1/26          massMatrixYhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [25]
                0.00    0.00       1/26          testYh(geometry const&, double (*)(double, double), double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [23]
                0.00    0.00       1/26          testPotentialYh(geometry const&, double (*)(double), Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [14]
                0.00    0.00       1/26          testPotentialXh(geometry const&, double (*)(double), Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [15]
                0.00    0.00       2/26          massMatrixXhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) <cycle 1> [28]
                0.00    0.00       2/26          projectXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [5]
                0.00    0.00       2/26          testYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [34]
                0.00    0.00       4/26          testXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [22]
                0.00    0.00       6/26          DipoleXhYh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [8]
                0.00    0.00       6/26          WeaklySingularXh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [9]
[54]     0.0    0.00    0.00      26         legendrebasis(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [54]
-----------------------------------------------
                                   1             massMatrixXhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) <cycle 1> [28]
                0.00    0.00       1/19          massMatrixYhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [25]
                0.00    0.00       1/19          testYh(geometry const&, double (*)(double, double), double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [23]
                0.00    0.00       1/19          Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >(Eigen::DenseBase<Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> > const&) [36]
                0.00    0.00       2/19          projectXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [5]
                0.00    0.00       2/19          testYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [34]
                0.00    0.00       2/19          projectYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [10]
                0.00    0.00       2/19          Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> >(Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const> const&) [35]
                0.00    0.00       4/19          testXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [22]
                0.00    0.00       4/19          get_wall_time() [33]
[55]     0.0    0.00    0.00      20         void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool) <cycle 1> [55]
                0.00    0.00       1/531         void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
                                  21             massMatrixXhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) <cycle 1> [28]
-----------------------------------------------
                0.00    0.00       8/18          WeaklySingularXh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [9]
                0.00    0.00      10/18          DipoleXhYh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [8]
[56]     0.0    0.00    0.00      18         Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > > const&) [56]
-----------------------------------------------
                0.00    0.00       1/11          DipoleXhYh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [8]
                0.00    0.00      10/11          WeaklySingularXh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [9]
[57]     0.0    0.00    0.00      11         Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::resize(long, long) [57]
-----------------------------------------------
                0.00    0.00       1/8           geometry::geometry(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::Matrix<int, -1, -1, 0, -1, -1>&) [102]
                0.00    0.00       7/8           geometry::refine() [101]
[58]     0.0    0.00    0.00       8         geometry::enhance() [58]
-----------------------------------------------
                0.00    0.00       2/4           massMatrixXhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) <cycle 1> [28]
                0.00    0.00       2/4           Eigen::internal::gebp_kernel<double, double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, double const*, double const*, long, long, long, double, long, long, long, long) [37]
[59]     0.0    0.00    0.00       4         Eigen::internal::aligned_malloc(unsigned long) [59]
-----------------------------------------------
                0.00    0.00       3/3           tensorize(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [61]
[60]     0.0    0.00    0.00       3         meshgrid(Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) [60]
-----------------------------------------------
                0.00    0.00       1/3           allQuadrature(int, bool) [80]
                0.00    0.00       2/3           prepareQuad(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [62]
[61]     0.0    0.00    0.00       3         tensorize(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [61]
                0.00    0.00       3/3           meshgrid(Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) [60]
-----------------------------------------------
                0.00    0.00       2/2           allQuadrature(int, bool) [80]
[62]     0.0    0.00    0.00       2         prepareQuad(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [62]
                0.00    0.00       2/3           tensorize(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [61]
-----------------------------------------------
                0.00    0.00       2/2           get_wall_time() [33]
[63]     0.0    0.00    0.00       2         void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::assign_op<double, double> >(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::internal::assign_op<double, double> const&) [63]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [109]
[64]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z13legendrebasisiRN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEEiRNS0_IdLin1ELin1ELi0ELin1ELin1EEE [64]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [109]
[65]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z14massMatrixXhXhRK8geometryiRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEE [65]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [109]
[66]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z15testPotentialXhRK8geometryPFddERKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEEiS8_ [66]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [109]
[67]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z16WeaklySingularXhRK8geometryPFddEiRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEES8_S8_ [67]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [109]
[68]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z4kronRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_ [68]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [109]
[69]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z6testXhRK8geometryPFdddEiRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEE [69]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [109]
[70]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z9tensorizeRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_ [70]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [109]
[71]     0.0    0.00    0.00       1         _GLOBAL__sub_I_main [71]
-----------------------------------------------
                0.00    0.00       1/1           allQuadrature(int, bool) [80]
[72]     0.0    0.00    0.00       1         tableGauss(int) [72]
-----------------------------------------------
                0.00    0.00       1/1           allQuadrature(int, bool) [80]
[73]     0.0    0.00    0.00       1         tableLogGauss(int) [73]
-----------------------------------------------
                0.00    0.00       1/1           void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long) [51]
[74]     0.0    0.00    0.00       1         Eigen::internal::queryCacheSizes(int&, int&, int&) [74]
-----------------------------------------------
                0.00    0.00       1/1           Eigen::internal::triangular_solver_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1, 2, 0, 1>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) [77]
[75]     0.0    0.00    0.00       1         Eigen::internal::triangular_solve_vector<double, double, long, 1, 2, false, 0>::run(long, double const*, long, double*) [75]
                0.00    0.00      63/126         Eigen::internal::general_matrix_vector_product<long, double, Eigen::internal::const_blas_data_mapper<double, long, 0>, 0, false, double, Eigen::internal::const_blas_data_mapper<double, long, 0>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, double*, long, double) [53]
-----------------------------------------------
                0.00    0.00       1/1           Eigen::internal::triangular_solver_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1, 5, 0, 1>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) [78]
[76]     0.0    0.00    0.00       1         Eigen::internal::triangular_solve_vector<double, double, long, 1, 5, false, 0>::run(long, double const*, long, double*) [76]
                0.00    0.00      63/126         Eigen::internal::general_matrix_vector_product<long, double, Eigen::internal::const_blas_data_mapper<double, long, 0>, 0, false, double, Eigen::internal::const_blas_data_mapper<double, long, 0>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, double*, long, double) [53]
-----------------------------------------------
                0.00    0.00       1/1           solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) [11]
[77]     0.0    0.00    0.00       1         Eigen::internal::triangular_solver_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1, 2, 0, 1>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) [77]
                0.00    0.00       1/1           Eigen::internal::triangular_solve_vector<double, double, long, 1, 2, false, 0>::run(long, double const*, long, double*) [75]
-----------------------------------------------
                0.00    0.00       1/1           solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) [11]
[78]     0.0    0.00    0.00       1         Eigen::internal::triangular_solver_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1, 5, 0, 1>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&) [78]
                0.00    0.00       1/1           Eigen::internal::triangular_solve_vector<double, double, long, 1, 5, false, 0>::run(long, double const*, long, double*) [76]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [64] _GLOBAL__sub_I__Z13legendrebasisiRN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEEiRNS0_IdLin1ELin1ELi0ELin1ELin1EEE [49] fone(double, double) [12] void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool)
  [65] _GLOBAL__sub_I__Z14massMatrixXhXhRK8geometryiRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEE [30] kron(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [55] void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool)
  [66] _GLOBAL__sub_I__Z15testPotentialXhRK8geometryPFddERKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEEiS8_ [18] kerDL(double) [38] void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>(Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> > const&, long, long, long, bool)
  [67] _GLOBAL__sub_I__Z16WeaklySingularXhRK8geometryPFddEiRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEES8_S8_ [17] kerSL(double) [16] Eigen::internal::triangular_solve_matrix<double, long, 1, 2, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&)
  [68] _GLOBAL__sub_I__Z4kronRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_ [11] solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) [7] Eigen::internal::triangular_solve_matrix<double, long, 1, 5, false, 0, 0>::run(long, long, double const*, long, double*, long, Eigen::internal::level3_blocking<double, double>&)
  [69] _GLOBAL__sub_I__Z6testXhRK8geometryPFdddEiRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEE [6] solve(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [75] Eigen::internal::triangular_solve_vector<double, double, long, 1, 2, false, 0>::run(long, double const*, long, double*)
  [70] _GLOBAL__sub_I__Z9tensorizeRKN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_ [22] testXh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [76] Eigen::internal::triangular_solve_vector<double, double, long, 1, 5, false, 0>::run(long, double const*, long, double*)
  [71] _GLOBAL__sub_I_main    [34] testYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [26] void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&, Eigen::internal::assign_op<double, double> const&)
   [8] DipoleXhYh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [60] meshgrid(Eigen::Matrix<double, -1, 1, 0, -1, 1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1> const&) [63] void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::assign_op<double, double> >(Eigen::Matrix<double, -1, -1, 0, -1, -1>&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::internal::assign_op<double, double> const&)
  [72] tableGauss(int)        [10] projectYh(geometry const&, double (*)(double, double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [1] Eigen::internal::inplace_transpose_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1>, false, false>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1>&)
  [62] prepareQuad(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [61] tensorize(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [77] Eigen::internal::triangular_solver_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1, 2, 0, 1>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&)
  [33] get_wall_time()        [24] preparedQuads::~preparedQuads() [78] Eigen::internal::triangular_solver_selector<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, 1, 0, -1, 1>, 1, 5, 0, 1>::run(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, 1, 0, -1, 1>&)
  [54] legendrebasis(int, Eigen::Matrix<double, -1, 1, 0, -1, 1>&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1>&) [3] Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::compute() [20] Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*)
  [73] tableLogGauss(int)      [2] Eigen::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PartialPivLU<Eigen::Matrix<double, -1, -1, 0, -1, -1> >(Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&) [21] Eigen::internal::general_matrix_matrix_product<long, double, 1, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*)
  [28] massMatrixXhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [57] Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::resize(long, long) [53] Eigen::internal::general_matrix_vector_product<long, double, Eigen::internal::const_blas_data_mapper<double, long, 0>, 0, false, double, Eigen::internal::const_blas_data_mapper<double, long, 0>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, Eigen::internal::const_blas_data_mapper<double, long, 0> const&, double*, long, double)
  [25] massMatrixYhYh(geometry const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [56] Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >(Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > > const&) [51] void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>(long&, long&, long&, long)
  [14] testPotentialYh(geometry const&, double (*)(double), Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [37] Eigen::internal::gebp_kernel<double, double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, double const*, double const*, long, long, long, double, long, long, long, long) [52] void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 4, long>(long&, long&, long&, long)
   [9] WeaklySingularXh(geometry const&, double (*)(double), int, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&, Eigen::Matrix<double, -1, -1, 0, -1, -1> const&) [50] Eigen::internal::gemm_pack_rhs<double, long, Eigen::internal::blas_data_mapper<double, long, 0, 0>, 4, 0, false, true>::operator()(double*, Eigen::internal::blas_data_mapper<double, long, 0, 0> const&, long, long, long, long) [58] geometry::enhance()
  [47] u(double, double)      [59] Eigen::internal::aligned_malloc(unsigned long) [13] std::ctype<char>::do_widen(char) const
  [29] differentiationMatrix(geometry const&, int) [4] Eigen::internal::partial_lu_impl<double, 0, int>::blocked_lu(long, long, double*, long, int*, int&, long) [27] <cycle 1>
  [48] v1(double, double)     [31] Eigen::internal::partial_lu_impl<double, 0, int>::unblocked_lu(Eigen::Block<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>&, int*, int&)
  [19] v2(double, double)     [74] Eigen::internal::queryCacheSizes(int&, int&, int&)
